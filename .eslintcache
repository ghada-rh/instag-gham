[{"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\index.js":"1","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\App.js":"2","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\reportWebVitals.js":"3","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\Post.js":"4","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\firebase.js":"5","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\ImageUpload.js":"6","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\Menu.js":"7","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\CardMenu.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":6247,"mtime":1610381213604,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2716,"mtime":1610381875743,"results":"13","hashOfConfig":"10"},{"size":706,"mtime":1610374417559,"results":"14","hashOfConfig":"10"},{"size":2197,"mtime":1610374510652,"results":"15","hashOfConfig":"10"},{"size":586,"mtime":1610374907087,"results":"16","hashOfConfig":"10"},{"size":640,"mtime":1610374888084,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"191eudz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\index.js",[],["36","37"],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\App.js",["38"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Components/Post';\nimport { db, auth } from './Components/firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './Components/ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\nimport logo from './images/instalogo.png';\nimport Menu from \"./Components/Menu\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n/*--------------------------------------*/\nfunction App() {\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState('');\n  const [openSignIn, setOpenSignIn] = useState(false);\n // const [postId, setPostId] = useState('')\n  \n  useEffect( () => {\n    const unsubscribe = auth.onAuthStateChanged( (authUser) =>{\n      if(authUser){\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        //user has logged out\n        setUser(null);\n       }\n    })\n\n    return () =>{\n      //perform some cleanup actions\n      unsubscribe();\n     }\n    }, [user, username]);\n\n\n  //useEffect : runs a piece of code on a specific condition\n  useEffect(() => {\n    //here the code runs\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot( snapshot => {\n      //every time a new post is added, this code fires\n      setPosts(snapshot.docs.map( doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    })\n    \n  }, []);\n  \n  const signUp = (e) =>{\n      e.preventDefault();\n      auth.createUserWithEmailAndPassword(email, password)\n      .then((authUser)=> { \n        authUser.user.updateProfile({\n          displayName: username\n        })\n      })\n      .catch((error) => alert(error.message));\n\n      setOpen(false)\n  }\n  \n  const signIn = (e) =>{\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(email, password)\n    .catch( (error) => alert(error.message))\n\n    setOpenSignIn(false)\n  }\n  const post = posts.map( ({id, post}) =>{\n    return(\n     <Post key = {id} user={user} postId={id} username = {post.username} caption={post.caption} imageUrl={post.imageUrl} />\n    )\n  })\n  return (\n    <div className=\"App\">\n      \n      <Modal open={open} onClose={()=> setOpen(false) } >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n                <img className=\"app__headerImage\"\n                  src={logo}alt=\"instalogo\"\n              />\n            </center>  \n             <Input\n               type= \"text\"\n               placeholder=\"username\"\n               value={username}\n               onChange ={(e)=> setUsername(e.target.value)}\n             />\n             <Input\n               type= \"text\"\n               placeholder=\"email\"\n               value={email}\n               onChange ={(e)=> setEmail(e.target.value)}\n             />\n             <Input\n               type= \"text\"\n               placeholder=\"password\"\n               value={password}\n               onChange ={(e)=> setPassword(e.target.value)}\n             />\n             <Button onClick = {signUp} >Sign Up</Button>\n            </form>\n          </div>\n       </Modal>\n\n       <Modal open={openSignIn} onClose={()=> setOpenSignIn(false) } >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n                <img className=\"app__headerImage\"\n                  src={logo} alt=\"instalogo\"\n              />\n            </center>\n             <Input\n               type= \"text\"\n               placeholder=\"email\"\n               value={email}\n               onChange ={(e)=> setEmail(e.target.value)}\n             />\n             <Input\n               type= \"text\"\n               placeholder=\"password\"\n               value={password}\n               onChange ={(e)=> setPassword(e.target.value)}\n             />\n             <Button onClick = {signIn} >Sign In</Button>\n            </form>\n          </div>\n       </Modal>\n\n       <div className=\"app__header\">\n          <div className=\"app__headerContainter\">\n              <img className=\"app__headerImage\"\n                  src={logo} alt=\"instalogo\"\n              />\n              \n              {user && <Menu/>}\n              \n              {user? (<Button onClick={() => auth.signOut()}>Logout</Button>\n            ):(\n              <div className=\"app__loginContainer\"> \n                  <Button onClick = {() => setOpenSignIn(true)} >Sign In</Button>\n                  <Button onClick = {() => setOpen(true)} >Sign Up</Button>\n                  </div> \n            )}\n         </div>\n       </div>    \n       \n       <div className=\"app__posts\">\n          <div className=\"app__postsLeft\">\n            {\n                  post\n                }\n          </div>\n          \n          <div className=\"app__postsRight\">\n              {/*<InstagramEmbed\n              url='https://www.instagram.com/p/CJ1j3cTD7Cb/'\n              clientAccessToken='123|456'\n              maxWidth={320}\n              hideCaption={false}\n              containerTagName='div'\n              protocol=''\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n              /> */}\n          </div>\n       </div>\n      {user? (\n          <ImageUpload username ={user.displayName} />\n        ): (\n          <h3>Sorry you need to login to upload images!</h3>\n        )}\n       \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\reportWebVitals.js",[],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\Post.js",[],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\firebase.js",[],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\ImageUpload.js",[],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\Menu.js",[],"C:\\Users\\stoufa\\Desktop\\ReactApp\\istagram-clone\\src\\Components\\CardMenu.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":8,"nodeType":"45","messageId":"46","endLine":9,"endColumn":22},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'InstagramEmbed' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]